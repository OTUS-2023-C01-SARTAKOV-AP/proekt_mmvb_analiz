
// https://www.linux.org.ru/forum/development/6537535 
// для работы со структурами в программы.с 
// нужно или в каждый исполняемый код (код.с) вставлять строки типа :
//              // структура с описанием  по  тафмфрэймам, с которыми работает код
//              extern struct таймфрэймы_описание глоб_об_таймфр_опис;    
// или подгружать отдельный файл в котором все это описано один раз!
// в этом файле как раз и описаны все перечисляемые глобальные структуры, таблицы, функции
// этот файл цепляется ко всем программы.с, кроме   main.c  если будут исключения
// о них будет сообщено отдельно!!!!


    // структура с описанием  по  тафмфрэймам, с которыми работает код
extern struct таймфрэймы_описание глоб_об_таймфрэймы_описание;    

 
    // глобальная строка, куда кидается фремя в формате       2023.10.30 11:26:43, понедельник  активация в main.h
extern char глоб_время_как_текст[50]; // значения назначаются ТОЛЬКО в main.c


    // глобальный список акций ММВБ (secid) активация в main.h
    // 350 строк с 5 текстовыми полями + 1завершающий 0
extern char глоб_список_secid[][6];

    // длина глобальный список акций ММВБ (secid) в штуках
extern int глоб_список_secid_штук;

    // глобальная переменная путь к журналу ошибок/действий оно же "arws_логфайл_путь" из структуры "ключи_запуска" активация в main.h
extern char глоб_логфайл_путь[СТРОКА_255]; // значения назначаются ТОЛЬКО в main.c


    // глобальная переменная оно же "тест_сообщ" из структуры "ключи_запуска".
    // выводит многие сообщения в терминал. Для отслеживания работоспособности.
    // В боевом режиме почти ничего из тестового режима не выводится.
extern int глоб_режим_тестов; // значения назначаются ТОЛЬКО в main.c 

    
    // Первичные настройки работы программы (нагрузка процессора, 
    // температура процессора, оперативная память, жесткий диск ...
extern struct ключи_запуска глоб_об_ключи_запуска;    


    // структура нагрузки системы - значения, которые мы контролируем и передаём в БД
extern volatile struct нагрузка_оперсист глоб_об_нагрузка_оперсист;    
    

    // глобальные указатели на структуру по разным таймфрэймаму и разным торговым инструментам (акциям)
extern volatile struct таймфрэйм_шаблон *gl_ar_структ_таймфрэйм_m1;
extern volatile struct таймфрэйм_шаблон *gl_ar_структ_таймфрэйм_m2;
extern volatile struct таймфрэйм_шаблон *gl_ar_структ_таймфрэйм_m3;
extern volatile struct таймфрэйм_шаблон *gl_ar_структ_таймфрэйм_m4;
extern volatile struct таймфрэйм_шаблон *gl_ar_структ_таймфрэйм_m5;
extern volatile struct таймфрэйм_шаблон *gl_ar_структ_таймфрэйм_m6;
extern volatile struct таймфрэйм_шаблон *gl_ar_структ_таймфрэйм_m10;
extern volatile struct таймфрэйм_шаблон *gl_ar_структ_таймфрэйм_m12;
extern volatile struct таймфрэйм_шаблон *gl_ar_структ_таймфрэйм_m15;
extern volatile struct таймфрэйм_шаблон *gl_ar_структ_таймфрэйм_m20;
extern volatile struct таймфрэйм_шаблон *gl_ar_структ_таймфрэйм_m30;


    // глобальная переменная коэффициент задержки в штуках, кратных 0.0001 сек. Так при 0 получаем задерждку в 0, а при 2=0,0002 сек
extern volatile int глоб_коэффиц_паузы; 














